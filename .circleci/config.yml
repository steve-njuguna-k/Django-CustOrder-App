version: 2.1  # CircleCI configuration version

jobs:
  build:
    docker:
      - image: cimg/python:3.10  # Specify the Python version using a Docker image
      - image: cimg/postgres:14.0  # Use an appropriate PostgreSQL version with required environment variables
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres

    steps:
      - checkout  # Checkout your code repository

      # Restore the cached Python packages to speed up dependency installation
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Install dependencies
          command: pip install -r requirements.txt  # Install project dependencies

      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ~/.cache/pip  # Cache the Python packages for future builds

      - run:
          name: Run tests
          command: |
            python manage.py test

  coverage:
    docker:
      - image: cimg/python:3.10  # Specify the Python version for coverage reporting
      - image: cimg/postgres:14.0  # Use an appropriate PostgreSQL version with required environment variables
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Install dependencies
          command: pip install -r requirements.txt  # Install dependencies for coverage

      - run:
          name: Run coverage
          command: |
            coverage run manage.py test
            coverage xml

      - save_cache:
          key: v1-coverage-{{ checksum "requirements.txt" }}
          paths:
            - .coverage  # Cache coverage data for future reference

  dockerhub:
    docker:
      - image: cimg/python:3.10  # Specify the Python version for coverage reporting
      - image: cimg/postgres:14.0  # Use an appropriate PostgreSQL version with required environment variables
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
            
    steps:
      - checkout # Step to check out the source code

      - run:
          name: Build Docker image
          command: docker build --tag $IMAGE_NAME .
          # Build a Docker image using the specified IMAGE_NAME

      - run:
          name: Push to DockerHub
          command: |
            # Authenticate with Docker Hub using the provided credentials
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            
            # Push the built image to Docker Hub with the 'latest' tag
            docker push $IMAGE_NAME:latest

workflows:
  version: 2  # Define a workflow for the CI/CD pipeline

  build-test:
    jobs:
      - build  # Run the 'build' job for building and testing
      - coverage:
          requires:
            - build  # Require the 'build' job to complete before running coverage
      - dockerhub:
          requires:
            - coverage  # Require the 'coverage' job to complete before running dockerhub